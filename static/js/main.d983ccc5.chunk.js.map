{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","textIndent","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d983ccc5.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({ color , text, onClick }) => {\n   \n    return (\n        <button  \n        onClick={onClick}\n        style={{ backgroundColor: color }} \n        className='btn'>\n            {text} \n        </button>\n    )\n}\n\nButton.propTypes ={\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\nconst Header = ({title, onAdd , showAdd}) => {\n\n    return (\n        <header className='header'>\n            <h1 >{title}</h1>\n            <Button color={showAdd  ?  '#525452' : '#0f8d9a'} text={showAdd  ?  'Close' : 'Add'} onClick={onAdd}/>\n           \n           \n        </header>\n    )\n}\n\n\nHeader.defaultProps ={\n    title: 'Avodas Hashem',\n}\n\n// CSS in line with a Variable Crazy\n// const  headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\nexport default Header\n","import { FaTimes } from  'react-icons/fa'\nconst Task = ({ task , onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ' '}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} {' '}\n            <FaTimes style={{ color: 'red', cursor: 'pointer' }}\n            onClick ={() => onDelete(task.id)}\n            />\n            </h3>\n            <p style={{textIndent: '10px'}}>-{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({tasks , onDelete ,onToggle}) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState(' ')\n    const [day, setDay] = useState(' ')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        \n        if ( !text ) {\n            alert('Please Add Avodah')\n            return\n        }\n\n        onAdd({ text , day , reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit= {onSubmit}>\n            <div className='form-control'>\n                <label>Avodah</label>\n                <input type='text' placeholder='New Avodah' \n                value={text} \n                onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control '>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Day & Time'\n                value={day} \n                onChange={(e) => setDay(e.target.value)} />\n            </div><div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' \n                checked={reminder}\n                value={reminder} \n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type='submit' value ='save-task' className='btn btn-block'/>\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import  Header  from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\nfunction App() {\n  const[showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n \n\n])\n\n//AddTask\n\nconst addTask = (task) => {\n   const id = Math.floor(Math.random() * 10000) + 1\n   const newTask = { id, ...task}\n   setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder =(id) => { \n  setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n}\n\n\n  return (\n    <div className='container'>\n      <Header \n      onAdd = { () => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask }  \n      />\n      {showAddTask && <AddTask onAdd={addTask} \n      />}\n      {tasks.length > 0 ? \n      (<Tasks  tasks={tasks}  onDelete={deleteTask} onToggle={toggleReminder}\n      />) : ('Add A New Avodah')}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}